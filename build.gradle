group 'com.pom.appium'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

sourceSets {
    test {
        java.srcDirs = ['src/test/java']
        resources.srcDirs = ['src/test/resources']
    }
}

ext.cukesVersion = '1.2.5'
//project.ext.set("log4jProperties", "src/test/resources/log4j2.properties")

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: "io.appium", name: "java-client", version: "5.0.4"
    testCompile group: 'log4j', name: 'log4j', version: '1.2.17'
    testCompile group: 'org.testng', name: 'testng', version: '6.13'
    testCompile group: 'com.aventstack', name: 'extentreports', version: '3.1.1'
    testCompile group: 'log4j', name: 'log4j', version: '1.2.17'
    testCompile group: 'com.beust', name: 'jcommander', version: '1.69'
    testCompile group: "info.cukes", name: "cucumber-core", version: "$cukesVersion"
    testCompile group: "info.cukes", name: "cucumber-jvm", version: "$cukesVersion"
    testCompile group: "info.cukes", name: "cucumber-java8", version: "$cukesVersion"
//    testCompile group: "info.cukes", name: "cucumber-java", version: "$cukesVersion"
//    compile group: 'info.cukes', name: 'cucumber-testng', version: '1.2.5'
//    testCompile group: "info.cukes", name: "cucumber-junit", version: "$cukesVersion"
    testCompile 'com.github.mkolisnyk:cucumber-runner:1.3'
    testCompile('info.cukes:cucumber-testng:' + "$cukesVersion") {
        exclude group: "junit", module: "junit"
    }
}

//task testNG(type: Test) {
//    dependsOn assemble, clean, compileJava, compileTestJava
//    useTestNG() {
//        suites "testsuite/testNG.xml"
//    }
//}
//
//task runWithTestNG(type: JavaExec, dependsOn: 'classes') {
//    main = 'org.testng.TestNG'
//    classpath = files("./src/test/resources",
//            project.sourceSets.main.compileClasspath,
//            project.sourceSets.test.compileClasspath,
//            project.sourceSets.main.runtimeClasspath,
//            project.sourceSets.test.runtimeClasspath)
//    args = ["-parallel", "methods", "-threadcount", "1", "-d", "./build/test-output", "./src/test/resources/testsuite/testNG.xml"]
//}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

def defaultCukeArgs = ['--plugin', 'pretty',
                       '--glue', 'stepdef', 'src/test/resources/features',
                       '--plugin', 'html:reports/cucumber/cucumber-html-report',
                       '--plugin', 'junit:reports/cucumber/cucumber-junit-report.xml',
                       '--plugin', 'json:reports/cucumber/cucumber-json-report.json',
                       '--tags', getTagsProperty()]

def getTagsProperty() {
//    if (!project.hasProperty("tags")) {
//        throw new GradleException("Provide a tag to execute, eg. -Ptags=\"@test\"")
//    }
    return project.hasProperty("tags") ? project.getProperties().get("tags") : "@test"
}

task cucumber() {
    delete fileTree(dir: "${rootDir}/reports", include: '*')
    println "** Cucumber arguments: " + defaultCukeArgs
    dependsOn assemble, clean, compileJava, compileTestJava
    javaexec {
        main = "cucumber.api.cli.Main"
        classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
        args = defaultCukeArgs
    }
}

